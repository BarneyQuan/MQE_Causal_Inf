reghealth2<-lm(inctot~health+age ,mydata)
summary(reghealth2)
#regressing income on health, age and education
reghealth3<-lm(inctot~health+age+edu ,mydata)
summary(reghealth3)
#presenting results in a formated output table
stargazer(reghealth,reghealth2, reghealth3,
out = "MQE_Causal_Inf/Module_1_OVB/code_output/tableovb.txt", type="text", header=FALSE,
title = "Income and health", omit.stat=c("f", "ser"))
##############################################
##############################################
# OVB SIMULATION EXCERCISE
##############################################
library(MASS)
library(ggplot2)
#setting base number so new run gives same results
set.seed(1999)
#generating two standard normal variables with a 0.5 correlation
out <- as.data.frame(mvrnorm(1000, mu = c(0,0),
Sigma = matrix(c(1,0.5,0.5,1), ncol = 2),
empirical = TRUE))
#checking the two variable are correlated as desired
cor(out)
#plotting the data I just generated
plot(out)
#generating a random error term (also standard normal)
out$error<-rnorm(1000, mean=0, sd=1)
#setting the values of the true beta coefficients
B1<-5
B2<-7
#Creating the data generating process
out$Y<-out$V1*B1+out$V2*B2+out$error
#estimating the correct model
sim1<-lm(Y~V1+V2, data=out)
#estimating the underspacified model
sim2<-lm(Y~V1, data=out)
#reporting results in a table
stargazer(sim1,sim2,out = "MQE_Causal_Inf/Module_1_OVB/code_output/tableovb_sim.txt", type="text",  header=FALSE,
title="Omitted Variable Bias Simulation", omit.stat=c("f", "ser"))
#generating adjusted oucome variable
out$adjY<-out$Y-B2*out$V2
#regressing with the adjusted outcome variable
sim3<-lm(adjY~V1, data=out)
#reporting results in a table
stargazer(sim1,sim2,sim3,out = "MQE_Causal_Inf/Module_1_OVB/code_output/tableovb_sim2.txt",  type="text", header=FALSE,
title="Omitted Variable Bias Simulation 2", omit.stat=c("f", "ser"))
#plotting the two sets of outcome variables
plotted<-ggplot(out, aes(V1, y = value, color = variable)) +
geom_point(aes(y = Y, col = "Y")) +
geom_point(aes(y = adjY, col = "adjY"))+
geom_smooth(method='lm', aes(y = Y, col = "Y"))+
geom_smooth(method='lm', aes(y = adjY, col = "adjY"))
plotted
##############################################
##############################################
# Arseneaux Gerber and Green (2006)
##############################################
#loading the data
agg_data<-read_dta("../../data/data_M1_OVB/IA_MI_merge040504.dta")
nrow(agg_data)
##scalling the vote02 variable to remove excess 0's from tables
agg_data$vote02<-100*as.numeric(agg_data$vote02)
#note: basic controls are included since the randomization happened at the state level
#and to distinguish between competitive and un-competitive races in each state.
regols1<-felm(vote02~contact+state+comp_mi+comp_ia,agg_data)
#Getting an unbiased estimate using insturumental variables approach
regexp1<-felm(vote02~state+comp_mi+comp_ia|0|(contact~treat_real+state+comp_mi+comp_ia),agg_data)
#presenting results in a table
stargazer(regols1,regexp1, out = "MQE_Causal_Inf/Module_1_OVB/code_output/agg1.txt",  type="text", se = list(regols1$rse,regexp1$rse),
header=FALSE,  title="AGG replication 1",omit.stat=c("f", "ser"), single.row = TRUE)
#old regression with controls
regols2<-felm(vote02~contact+state+comp_mi+comp_ia+persons+age+
female2+newreg+vote00+vote98+fem_miss|county+st_hse+st_sen,agg_data)
#experimental IV estimates
regexp2<-felm(vote02~state+comp_mi+comp_ia+persons+age+
female2+newreg+vote00+vote98+fem_miss|county+st_hse+st_sen|
(contact~treat_real+state+comp_mi+comp_ia+persons+age
+female2+newreg+vote00+vote98+fem_miss),agg_data)
#presenting results in a table
stargazer(regols2,regexp2, out = "MQE_Causal_Inf/Module_1_OVB/code_output/agg2.txt",  type="text", se = list(regols2$rse,regexp2$rse),
header=FALSE,  title="AGG replication 2",omit.stat=c("f", "ser"), single.row = TRUE)
##############################################
#experimental IV estimates
regexp2<-felm(vote02~state+comp_mi+comp_ia+persons+age+
female2+newreg+vote00+vote98+fem_miss|county+st_hse+st_sen|
(contact~treat_real+state+comp_mi+comp_ia+persons+age
+female2+newreg+vote00+vote98+fem_miss),agg_data)
#loading required packages
library(lfe)
library(stargazer)
library(haven)
library(here)
library(dplyr)
library(MASS)
library(ggplot2)
#getwd()
#setwd(here())
#getwd()
#setwd("..")
getwd()
##############################################
#INCOME AND EDUCATION EXCERCISE
##############################################
library(haven)
#loading CPS data
mydata<-read.csv("../../data/data_M1_OVB/cps_clean.csv")
#regressing income on education
reg1<-lm(inctot~edu,mydata[mydata$age>22,])
summary(reg1)
#visualizing scatterplot
plot(mydata[mydata$age>22 & mydata$inctot<300000,]$edu,
mydata[mydata$age>22 & mydata$inctot<300000,]$inctot)
#constructing College graduate indicator
mydata$collgrad<-0
mydata$collgrad[mydata$edu>=16]<-1
#regressing income on college graduation
reg2<-lm(inctot~collgrad,mydata[mydata$edu>=12 & mydata$age>22,])
summary(reg2)
##############################################
##############################################
#INCOME AND HEALTH OVB EXCERCISE
##############################################
library(haven)
library(stargazer)
#loading CPS data
mydata<-read.csv("../../data/data_M1_OVB/cps_clean.csv")
#regressing income on health
reghealth<-lm(inctot~health,mydata)
summary(reghealth)
#regressing income on health and age
reghealth2<-lm(inctot~health+age ,mydata)
summary(reghealth2)
#regressing income on health, age and education
reghealth3<-lm(inctot~health+age+edu ,mydata)
summary(reghealth3)
#presenting results in a formated output table
stargazer(reghealth,reghealth2, reghealth3,
out = "code_output/tableovb.txt", type="text", header=FALSE,
title = "Income and health", omit.stat=c("f", "ser"))
##############################################
##############################################
# OVB SIMULATION EXCERCISE
##############################################
library(MASS)
library(ggplot2)
#setting base number so new run gives same results
set.seed(1999)
#generating two standard normal variables with a 0.5 correlation
out <- as.data.frame(mvrnorm(1000, mu = c(0,0),
Sigma = matrix(c(1,0.5,0.5,1), ncol = 2),
empirical = TRUE))
#checking the two variable are correlated as desired
cor(out)
#plotting the data I just generated
plot(out)
#generating a random error term (also standard normal)
out$error<-rnorm(1000, mean=0, sd=1)
#setting the values of the true beta coefficients
B1<-5
B2<-7
#Creating the data generating process
out$Y<-out$V1*B1+out$V2*B2+out$error
#estimating the correct model
sim1<-lm(Y~V1+V2, data=out)
#estimating the underspacified model
sim2<-lm(Y~V1, data=out)
#reporting results in a table
stargazer(sim1,sim2,out = "code_output/tableovb_sim.txt", type="text",  header=FALSE,
title="Omitted Variable Bias Simulation", omit.stat=c("f", "ser"))
#generating adjusted oucome variable
out$adjY<-out$Y-B2*out$V2
#regressing with the adjusted outcome variable
sim3<-lm(adjY~V1, data=out)
#reporting results in a table
stargazer(sim1,sim2,sim3,out = "code_output/tableovb_sim2.txt",  type="text", header=FALSE,
title="Omitted Variable Bias Simulation 2", omit.stat=c("f", "ser"))
#plotting the two sets of outcome variables
plotted<-ggplot(out, aes(V1, y = value, color = variable)) +
geom_point(aes(y = Y, col = "Y")) +
geom_point(aes(y = adjY, col = "adjY"))+
geom_smooth(method='lm', aes(y = Y, col = "Y"))+
geom_smooth(method='lm', aes(y = adjY, col = "adjY"))
plotted
##############################################
##############################################
# Arseneaux Gerber and Green (2006)
##############################################
#loading the data
agg_data<-read_dta("../../data/data_M1_OVB/IA_MI_merge040504.dta")
nrow(agg_data)
##scalling the vote02 variable to remove excess 0's from tables
agg_data$vote02<-100*as.numeric(agg_data$vote02)
#note: basic controls are included since the randomization happened at the state level
#and to distinguish between competitive and un-competitive races in each state.
regols1<-felm(vote02~contact+state+comp_mi+comp_ia,agg_data)
#Getting an unbiased estimate using insturumental variables approach
regexp1<-felm(vote02~state+comp_mi+comp_ia|0|(contact~treat_real+state+comp_mi+comp_ia),agg_data)
#presenting results in a table
stargazer(regols1,regexp1, out = "code_output/agg1.txt",  type="text", se = list(regols1$rse,regexp1$rse),
header=FALSE,  title="AGG replication 1",omit.stat=c("f", "ser"), single.row = TRUE)
#old regression with controls
regols2<-felm(vote02~contact+state+comp_mi+comp_ia+persons+age+
female2+newreg+vote00+vote98+fem_miss|county+st_hse+st_sen,agg_data)
#experimental IV estimates
regexp2<-felm(vote02~state+comp_mi+comp_ia+persons+age+
female2+newreg+vote00+vote98+fem_miss|county+st_hse+st_sen|
(contact~treat_real+state+comp_mi+comp_ia+persons+age
+female2+newreg+vote00+vote98+fem_miss),agg_data)
#presenting results in a table
stargazer(regols2,regexp2, out = "code_output/agg2.txt",  type="text", se = list(regols2$rse,regexp2$rse),
header=FALSE,  title="AGG replication 2",omit.stat=c("f", "ser"), single.row = TRUE)
##############################################
#names
names<-c("Joshua", "Alexis", "Adam", "Jacob","Alyssa", "Patricia", "Natalee","Kayko","Gayatri", "Mason", "Spencer", "Max", "Charles", "Jiayi")
names<-as.data.frame(names)
set.seed(1082020)
randvar = sample(c('A','B','C','D','A','B','C', 'D','A','B','C', 'D','A','B'),size = nrow(names), replace = FALSE)
names$group = randvar
View(names)
#names
names<-c("Joshua", "Alexis", "Adam", "Jacob","Alyssa", "Patricia", "Natalee","Kayko","Gayatri", "Mason", "Spencer", "Max", "Charles", "Jiayi")
emails<-c("jod85@pitt.edu", "?", "agd24@pitt.edu", "jmh263@pitt.edu", "anm272@pitt.edu","pmm73@pitt.edu", "nsm30@pitt.edu", "kao78@pitt.edu", "gap54@pitt.edu", "map347@pitt.edu","sps52@pitt.edu", "mst33@pitt.edu","cht98@pitt.edu", "jiz219@pitt.edu")
names<-as.data.frame(names)
set.seed(1082020)
randvar = sample(c('A','B','C','D','A','B','C', 'D','A','B','C', 'D','A','B'),size = nrow(names), replace = FALSE)
names$group = randvar
names$emails<-emails
View(names)
names<-names[,2:3]
View(names)
write.csv(names,"C:\Users\Claire\Desktop\mod1groups.csv", row.names = FALSE)
(names,"C:/Users/Claire/Desktop/mod1groups.csv", row.names = FALSE)
#group randomizer
#names
names<-c("Joshua", "Alexis", "Adam", "Jacob","Alyssa", "Patricia", "Natalee","Kayko","Gayatri", "Mason", "Spencer", "Max", "Charles", "Jiayi")
emails<-c("jod85@pitt.edu", "?", "agd24@pitt.edu", "jmh263@pitt.edu", "anm272@pitt.edu","pmm73@pitt.edu", "nsm30@pitt.edu", "kao78@pitt.edu", "gap54@pitt.edu", "map347@pitt.edu","sps52@pitt.edu", "mst33@pitt.edu","cht98@pitt.edu", "jiz219@pitt.edu")
names<-as.data.frame(names)
set.seed(1082020)
randvar = sample(c('A','B','C','D','A','B','C', 'D','A','B','C', 'D','A','B'),size = nrow(names), replace = FALSE)
names$group = randvar
names$emails<-emails
names<-names[,2:3]
#output csv
write.csv(names,"C:/Users/Claire/Desktop/mod1groups.csv", row.names = FALSE)
write.csv(names,"C:/Users/Claire/Desktop/mod1groups.csv", row.names = FALSE,quote=FALSE)
library(lfe)
library(stargazer)
# Set so that long lines in R will be wrapped:
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=80), tidy=TRUE)
library(MASS)
library(ggplot2)
sigmaMat<-matrix(c(1,0.75,0.25,0.75,1,0,0.25,0,1), nrow=3)
sigmaMat
set.seed(3221)
ivdat<- as.data.frame(mvrnorm(10000, mu = c(0,0,0),
Sigma = sigmaMat))
names(ivdat)<-c("x_1","x_2","z")
cor(ivdat)
ivdat$error<-rnorm(10000, mean=0, sd=1)
#The data generating process
B1<-10
B2<-(-20)
ivdat$Y<-ivdat$x_1*B1+ivdat$x_2*B2+ivdat$error
simiv1<-lm(Y~x_1+x_2, data=ivdat)
simiv2<-lm(Y~x_1, data=ivdat)
stargazer(simiv1, simiv2,  type='latex')
cor(ivdat$z, ivdat$x_1)
#note: we can test this correlation because I am working with simulated data and observe x_2.
#In the wild x_2 would be unobservable and you would have to argue that this condition holds.
ivdat$nu<-B2*ivdat$x_2+ivdat$error
cor(ivdat$z, ivdat$nu)
simiv3<-felm(Y~1|0|(x_1~z),ivdat)
stargazer(simiv1, simiv2, simiv3,  type='latex')
sim2slsfs<-felm(x_1~z,ivdat)
summary(sim2slsfs)
hatgamma0<-sim2slsfs$coefficients[1]
hatgamma1<-sim2slsfs$coefficients[2]
ivdat$hatx_1<-hatgamma0+hatgamma1*ivdat$z
sim2slsss<-felm(Y~hatx_1,ivdat)
stargazer(simiv1, simiv2, simiv3,sim2slsss,  type='latex')
sim2slsrf<-felm(Y~z,ivdat)
stargazer(sim2slsfs, sim2slsss, sim2slsrf,  type='latex')
library(MASS)
library(ggplot2)
sigmaMat<-matrix(c(1,0.75,0.03,0.75,1,0.01,0.03,0.01,1), nrow=3)
sigmaMat
set.seed(5000)
ivdatwk<- as.data.frame(mvrnorm(10000, mu = c(0,0,0),
Sigma = sigmaMat))
names(ivdatwk)<-c("x_1","x_2","z")
ivdatwk$error<-rnorm(10000, mean=0, sd=1)
ivdatwk$nu=(-20)*ivdatwk$x_2+ivdatwk$error
cov(ivdatwk)
#The data generating process
B1<-10
B2<-(-20)
ivdatwk$Y<-ivdatwk$x_1*B1+ivdatwk$x_2*B2+ivdatwk$error
simivweakfs<-lm(x_1~z,ivdatwk)
simivweak<-felm(Y~1|0|(x_1~z),ivdatwk)
stargazer(simivweakfs,simivweak,  type='latex')
library(MASS)
library(ggplot2)
sigmaMat<-matrix(c(1,0.75,0.25,0.2,0.75,1,0,0,0.25,0,1,0,0.2,0,0,1 ), nrow=4)
sigmaMat
set.seed(5000)
ivc<- as.data.frame(mvrnorm(10000, mu = c(0,0,0,0),
Sigma = sigmaMat))
names(ivc)<-c("x_1","x_2","z", "c")
ivc$error<-rnorm(10000, mean=0, sd=1)
ivc$nu=(-20)*ivc$x_2+ivc$error
#The data generating process
B1<-10
B2<-5
B3<-(-20)
ivc$Y<-ivc$x_1*B1+ivc$x_2*B3+B2*ivc$c+ivc$error
simivc<-felm(Y~c|0|(x_1~z+c),ivc)
stargazer(simivc,  type='latex')
library(dplyr)
#Loading needed packages
library(lfe)
library(stargazer)
library(MASS)
library(ggplot2)
##############################################
#Simple IV simulation
##############################################
#generating the correlation matrix (MASS package)
sigmaMat<-matrix(c(1,0.75,0.25,0.75,1,0,0.25,0,1), nrow=3)
sigmaMat
#setting the seed
set.seed(3221)
#generating the data
ivdat<- as.data.frame(mvrnorm(10000, mu = c(0,0,0),
Sigma = sigmaMat))
names(ivdat)<-c("x_1","x_2","z")
cor(ivdat)
#generating the random error term
ivdat$error<-rnorm(10000, mean=0, sd=1)
#The data generating process
B1<-10
B2<-(-20)
ivdat$Y<-ivdat$x_1*B1+ivdat$x_2*B2+ivdat$error
#estimating the true and underspecified model and presenting results
simiv1<-lm(Y~x_1+x_2, data=ivdat)
simiv2<-lm(Y~x_1, data=ivdat)
stargazer(simiv1, simiv2,  type='latex')
#understanting the source of the bias
cor(ivdat$z, ivdat$x_1)
#note: we can test this correlation because I am working with simulated data and observe x_2.
#In the wild x_2 would be unobservable and you would have to argue that this condition holds.
ivdat$nu<-B2*ivdat$x_2+ivdat$error
cor(ivdat$z, ivdat$nu)
#estimating the IV estimate
simiv3<-felm(Y~1|0|(x_1~z),ivdat)
stargazer(simiv1, simiv2, simiv3,  type='latex')
#getting the first stage
sim2slsfs<-felm(x_1~z,ivdat)
summary(sim2slsfs)
#the second stage
hatgamma0<-sim2slsfs$coefficients[1]
hatgamma1<-sim2slsfs$coefficients[2]
ivdat$hatx_1<-hatgamma0+hatgamma1*ivdat$z
sim2slsss<-felm(Y~hatx_1,ivdat)
stargazer(simiv1, simiv2, simiv3,sim2slsss,  type='latex')
#the reduced form
sim2slsrf<-felm(Y~z,ivdat)
stargazer(sim2slsfs, sim2slsss, sim2slsrf,  type='latex')
##############################################
##############################################
#A weak instrument
##############################################
#generating the correlation matrix
sigmaMat<-matrix(c(1,0.75,0.03,0.75,1,0.01,0.03,0.01,1), nrow=3)
sigmaMat
#generating the simulated data
set.seed(5000)
ivdatwk<- as.data.frame(mvrnorm(10000, mu = c(0,0,0),
Sigma = sigmaMat))
names(ivdatwk)<-c("x_1","x_2","z")
cov(ivdatwk)
ivdatwk$error<-rnorm(10000, mean=0, sd=1)
ivdatwk$nu=(-20)*ivdatwk$x_2+ivdatwk$error
#The data generating process
B1<-10
B2<-(-20)
ivdatwk$Y<-ivdatwk$x_1*B1+ivdatwk$x_2*B2+ivdatwk$error
simivweakfs<-lm(x_1~z,ivdatwk)
simivweak<-felm(Y~1|0|(x_1~z),ivdatwk)
stargazer(simivweakfs,simivweak,  type='latex')
##############################################
##############################################
#IV with control variables example
##############################################
sigmaMat<-matrix(c(1,0.75,0.25,0.2,0.75,1,0,0,0.25,0,1,0,0.2,0,0,1 ), nrow=4)
sigmaMat
set.seed(5000)
ivc<- as.data.frame(mvrnorm(10000, mu = c(0,0,0,0),
Sigma = sigmaMat))
names(ivc)<-c("x_1","x_2","z", "c")
ivc$error<-rnorm(10000, mean=0, sd=1)
ivc$nu=(-20)*ivc$x_2+ivc$error
#The data generating process
B1<-10
B2<-5
B3<-(-20)
ivc$Y<-ivc$x_1*B1+ivc$x_2*B3+B2*ivc$c+ivc$error
simivc<-felm(Y~c|0|(x_1~z+c),ivc)
stargazer(simivc,  type='latex')
##############################################
##############################################
#IV with multiple instruments
##############################################
sigmaMat<-matrix(c(1,0.75,0.25,0.5,0.75,1,0,0,0.25,0,1,0.3,0.5,0,0.3,1 ), nrow=4)
sigmaMat
set.seed(5000)
ivmi<- as.data.frame(mvrnorm(10000, mu = c(0,0,0,0),
Sigma = sigmaMat))
names(ivmi)<-c("x_1","x_2","z_1", "z_2")
ivmi$error<-rnorm(10000, mean=0, sd=1)
ivmi$nu=(-20)*ivmi$x_2+ivmi$error
#The data generating process
B1<-10
B2<-(-20)
ivmi$Y<-ivmi$x_1*B1+ivmi$x_2*B2+ivmi$error
simivmifs<-felm(x_1~z_1+z_2,ivmi)
simivmi<-felm(Y~1|0|(x_1~z_1+z_2),ivmi)
stargazer(simivmifs, simivmi,  type='latex')
##############################################
##############################################
#IV with multiple endogenous variables and multiple instruments
##############################################
sigmaMat<-matrix(c(1,0.75,0.25,0.1,0.2,
0.75,1,0,0,0.4,
0.25,0,1,0.3,0.15,
0.1,0,0.3,1,0.35,
0.2,0.4,0.15,0.35,1), nrow=5)
sigmaMat
set.seed(5500)
ivme<- as.data.frame(mvrnorm(10000, mu = c(0,0,0,0,0),
Sigma = sigmaMat))
names(ivme)<-c("x_1","x_2","z_1", "z_2","x_3")
ivme$error<-rnorm(10000, mean=0, sd=1)
ivme$nu=(-20)*ivme$x_2+ivme$error
#The data generating process
B1<-10
B2<-(-20)
B3<-(-30)
ivme$Y<-ivme$x_1*B1+ivme$x_2*B2+ivme$x_3*B3+ivme$error
simivmefs1<-felm(x_1~z_1+z_2,ivme)
simivmefs2<-felm(x_3~z_1+z_2,ivme)
#Underidentified
simivmeunder1<-felm(Y~1|0|(x_1|x_3~z_2),ivme)
simivmeunder2<-felm(Y~1|0|(x_1|x_3~z_1),ivme)
simivme<-felm(Y~1|0|(x_1|x_3~z_1+z_2),ivme)
stargazer(simivmefs1,simivmefs2,simivmeunder1,simivmeunder2, simivme,  type='latex')
################################################################
################################################################
#IV in AAG(2006)
################################################################
library(haven)
library(lfe)
library(dplyr)
agg_data<-read_dta("../../data/data_M3_IV/IA_MI_merge040504.dta")
nrow(agg_data)
#scalling the vote02 variable to remove excess 0's from tables
agg_data$vote02<-100*as.numeric(agg_data$vote02)
regols1<-felm(vote02~contact+state+comp_mi+comp_ia,agg_data)
regiv1<-felm(vote02~state+comp_mi+comp_ia|0|(contact~treat_real+state+comp_mi+comp_ia),agg_data)
stargazer(regols1,regiv1,type='latex', se = list( regols1$rse, regiv1$rse), header=FALSE)
################################################################
library(MASS)
library(lfe)
library(stargazer)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.width=9, fig.height=5)
set.seed(1999)
scores5<-as.data.frame(rep(c(1,2,3,4,5,6,7,8,9,10),times=30))
names(scores5)<-c("class")
scores5 <- fastDummies::dummy_cols(scores5, select_columns = "class")
scores5$error<-rnorm(300, mean=0, sd=10)
#treatment indicator
scores5$treat<-rbinom(300,1,0.3)
#mean reading score
alpha=75
#treatment effect
tau=10
#the data generating process: notice the class does affect a student's score
scores5$read4<-alpha+tau*scores5$treat+scores5$error+4*scores5$class_1+(-6)*scores5$class_2+8*scores5$class_3+(-4)*scores5$class_4+7*scores5$class_5+(-2)*scores5$class_6+5*scores5$class_7+(-10)*scores5$class_8+8*scores5$class_9+4*scores5$class_10
rct1<-felm(read4~treat,scores5)
stargazer(rct1, type="latex", header=FALSE)
#simulating covariates
#third grade test scores. Notice I am generateing simulated academic scores that have a correlation to their "untreated" performance in 4th grade reading
scores5$read3<-alpha+scores5$error+rnorm(300,3,2)
scores5$math3<-alpha+scores5$error+rnorm(300,15,2)
scores5$hist3<-alpha+scores5$error+rnorm(300,5,2)
scores5$pe3<-rnorm(300,90,2)
#other 4th grade test scores: notice I am generating scores that correlated with their subject performance in 3rd grade. Also, the treatment is affecting other 4th grade academic scores
scores5$hist4<-4*scores5$treat+scores5$hist3+rnorm(300,-2,2)
scores5$pe4<-scores5$pe3+rnorm(300,0,5)
scores5$math4<-2*scores5$treat+scores5$math3+rnorm(300,-5,3)
#student characteristics
scores5$female<-rbinom(300,1,0.5)
scores5$age<-runif(300,9,10)
scores5$height<-rnorm(300,1.3,0.2)
scoresmini<-scores5[,c("treat", "read4", "read3", "math3","hist3","pe3","hist4","pe4","math4","female", "age", "height")]
knitr::kable(head(scoresmini))
#as you can see, we have simulated some complex interrelationships between theses variables.
cor(scoresmini)
namevec<-names(scores5)
namevec<-namevec[!namevec%in%c("class","error", "treat","read4")]
allModelsList <- lapply(paste(namevec,"~treat"), as.formula)
View(allModelsList)
